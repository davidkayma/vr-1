<h2>Record Explanation</h2>

  <ziggeo
        ziggeo-width=450
        ziggeo-height=300>
  </ziggeo>
  <br>
<%= form_for [@lesson, @explanation],html: {id: "tokenForm"}, remote: true  do |f| %>
  <% if @explanation.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@lesson.errors.count, "error") %> prohibited this lesson from being saved:</h2>

      <ul>
      <% @explanation.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <%= f.text_field :user_id, type:"hidden", value:current_user.id %><br>
  <%= f.text_field :lesson_id, type:"hidden", value:params[:lesson_id] %><br>
  <%= f.text_area :script, placeholder:'script' %><br>
  <%= f.text_field :video_token, type:"hidden" %>
  <%= f.text_field :token, type:"hidden" %>
  <%= link_to "Submit", new_lesson_prompt_path(@lesson), id: "explanationButton" %>
<% end %> <br>

<script >
  // this function is getting the video token from ZiggeoApi.Events
  function postVideoToken(videoToken, streamToken){
    // grab form by the id been display in the html and store it in a jquery object
    $form = $('#tokenForm');
    // grab the value field by its the id
    $ziggeotoken = $('#explanation_video_token');
    $webtoken = $('#explanation_token');

    $user = $('explanation_user_id');
    $lesson = $('explanation_lesson_id');

    // assign the value of that field we grab by its id to the value of postVideoToken
    $ziggeotoken.val(videoToken);
    $webtoken.val(streamToken)

    // the form we grabed earlier by its id gets submited to the server
    $form.submit();
    // $.ajax ({
    //   url : "/token",
    //   type : "post",
    //   data : {token: videoToken}
    // });
  };
  // function postStreamToken(streamToken){
  //
  // };
      ZiggeoApi.Events.on("submitted", function (data) {

          // getting the string token and storing it in videoToken var to ship it to the outside world
          var streamToken = data.stream.token
          var videoToken = data.stream.video_token
          console.log(videoToken);
          console.log(streamToken);

          // here is where we grab the token to escort it outside of the ziggeo api on click event
          postVideoToken(videoToken, streamToken);


          // console.log(streamToken);

      });
</script>
